/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.flp.gccw;

import java.util.ArrayList;
import javax.swing.JPanel;

public final class GCCVisualPanel3 extends JPanel {

    /**
     * Creates new form GCCVisualPanel3
     */
    public GCCVisualPanel3() {
        initComponents();
    }

    @Override
    public String getName() {
        return "Fields tulajdonság beállítása";
    }
    
    public void setFieldsList(ArrayList<String> list){
        if(list!= null){
            this.listPanel1.setSelectableList(list);
        }
    }
    
    public ArrayList<String> getSelectedFields(){
        return listPanel1.getTo().getList();
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listPanel1 = new org.flp.gccw.control.ListPanel();

        setPreferredSize(new java.awt.Dimension(700, 300));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(listPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.flp.gccw.control.ListPanel listPanel1;
    // End of variables declaration//GEN-END:variables
}
